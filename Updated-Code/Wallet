class Wallet {
  constructor() {
    this.balance = 0;
    this.purchaseHistory = [];
  }

  
  deposit(amount) {
    if (amount > 0) {
      this.balance += amount;
      this.addToHistory(amount, 'Deposit');
      return `Successfully deposited $${amount}`;
    } else {
      return "Invalid amount. Please enter a positive number.";
    }
  }

  
  withdraw(amount) {
    if (amount > 0 && amount <= this.balance) {
      this.balance -= amount;
      this.addToHistory(amount, 'Withdrawal');
      return `Successfully withdrew $${amount}`;
    } else if (amount <= 0) {
      return "Invalid amount. Please enter a positive number.";
    } else {
      return "Insufficient funds.";
    }
  }

  
  viewHistory() {
    return this.purchaseHistory;
  }

  
  viewBalance() {
    return `Current balance: $${this.balance}`;
  }

  
  addToHistory(amount, type) {
    const transaction = {
      type: type,
      amount: amount,
      date: new Date().toLocaleString()
    };
    this.purchaseHistory.push(transaction);
  }
}
